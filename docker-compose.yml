services:
  hivemetastore:
    image: postgres:11.5
    hostname: hivemetastore
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: new_password
    expose:
      - "5432"
    volumes:
      - hivemetastore_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      spark_net:
        ipv4_address: 172.28.1.4
    extra_hosts:
      - "master:172.28.1.1"
      - "worker1:172.28.1.2"
      - "worker2:172.28.1.3"
    deploy:
      resources:
        limits:
          cpus: "0.50"
          memory: "512M"

  master:
    image: panovvv/hadoop-hive-spark:2.5.2
    hostname: master
    depends_on:
      hivemetastore:
        condition: service_healthy
    environment:
      HADOOP_NODE: namenode
      HIVE_CONFIGURE: yes, please
      SPARK_PUBLIC_DNS: localhost
      SPARK_LOCAL_IP: 172.28.1.1
      SPARK_MASTER_HOST: 172.28.1.1
      SPARK_LOCAL_HOSTNAME: master
    expose:
      - "8080"  # Spark Master Web UI
      - "18080"  # Spark History server
      - "10000"  # Hive JDBC
    ports:
      - "8080:8080"
      - "18080:18080"
      - "10000:10000"
      - "9870:9870"  # Hadoop namenode UI
      - "9868:9868"  # Hadoop secondary namenode UI
    volumes:
      - master_data:/data
    networks:
      spark_net:
        ipv4_address: 172.28.1.1
    extra_hosts:
      - "worker1:172.28.1.2"
      - "worker2:172.28.1.3"
      - "hivemetastore:172.28.1.4"
    deploy:
      resources:
        limits:
          cpus: "1.00"
          memory: "2G"

  worker1:
    image: panovvv/hadoop-hive-spark:2.5.2
    hostname: worker1
    depends_on:
      hivemetastore:
        condition: service_healthy
    environment:
      SPARK_MASTER_ADDRESS: spark://master:7077
      SPARK_WORKER_PORT: 8881
      SPARK_WORKER_WEBUI_PORT: 8081
      SPARK_PUBLIC_DNS: localhost
      SPARK_LOCAL_HOSTNAME: worker1
      SPARK_LOCAL_IP: 172.28.1.2
      SPARK_MASTER_HOST: 172.28.1.1
      HADOOP_NODE: datanode
    expose:
      - "8081"  # Spark worker UI
    ports:
      - "8081:8081"
      - "9864:9864"  # Hadoop datanode UI
    volumes:
      - worker1_data:/data
    networks:
      spark_net:
        ipv4_address: 172.28.1.2
    extra_hosts:
      - "master:172.28.1.1"
      - "worker2:172.28.1.3"
      - "hivemetastore:172.28.1.4"
    deploy:
      resources:
        limits:
          cpus: "0.75"
          memory: "1.5G"

  worker2:
    image: panovvv/hadoop-hive-spark:2.5.2
    hostname: worker2
    depends_on:
      hivemetastore:
        condition: service_healthy
    environment:
      SPARK_MASTER_ADDRESS: spark://master:7077
      SPARK_WORKER_PORT: 8882
      SPARK_WORKER_WEBUI_PORT: 8082
      SPARK_PUBLIC_DNS: localhost
      SPARK_LOCAL_HOSTNAME: worker2
      SPARK_LOCAL_IP: 172.28.1.3
      SPARK_MASTER_HOST: 172.28.1.1
      HADOOP_NODE: datanode
      HADOOP_DATANODE_UI_PORT: 9865
    expose:
      - "8082"  # Spark worker UI
    ports:
      - "8082:8082"
      - "9865:9865"  # Hadoop datanode UI
    volumes:
      - worker2_data:/data
    networks:
      spark_net:
        ipv4_address: 172.28.1.3
    extra_hosts:
      - "master:172.28.1.1"
      - "worker1:172.28.1.2"
      - "hivemetastore:172.28.1.4"
    deploy:
      resources:
        limits:
          cpus: "0.75"
          memory: "1.5G"

networks:
  spark_net:
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16

volumes:
  hivemetastore_data:
  master_data:
  worker1_data:
  worker2_data:
